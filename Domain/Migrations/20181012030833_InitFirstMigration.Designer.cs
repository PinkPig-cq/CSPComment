// <auto-generated />
using System;
using Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domain.Migrations
{
    [DbContext(typeof(GeneralDbContext))]
    [Migration("20181012030833_InitFirstMigration")]
    partial class InitFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.EvaluationOrders.EvaluationOrder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasMaxLength(200);

                    b.Property<int>("CreatorID");

                    b.Property<DateTime>("EvaluationStart");

                    b.Property<int>("ServiceProviderID");

                    b.Property<float>("Star");

                    b.HasKey("ID");

                    b.HasIndex("CreatorID");

                    b.HasIndex("ServiceProviderID");

                    b.ToTable("EvaluationOrder");
                });

            modelBuilder.Entity("Domain.Replies.Reply", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int?>("EvaluationOrderID");

                    b.Property<int>("ParentReplyID");

                    b.Property<int>("ReplierID");

                    b.Property<DateTime?>("ReplyStart");

                    b.Property<string>("Writer");

                    b.HasKey("ID");

                    b.HasIndex("EvaluationOrderID");

                    b.HasIndex("ReplierID");

                    b.ToTable("Reply");
                });

            modelBuilder.Entity("Domain.ServiceProviders.ServiceProvider", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Image")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<float>("Star");

                    b.HasKey("ID");

                    b.ToTable("ServiceProvider");
                });

            modelBuilder.Entity("Domain.SysUsers.SysUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("ID");

                    b.ToTable("SysUser");
                });

            modelBuilder.Entity("Domain.EvaluationOrders.EvaluationOrder", b =>
                {
                    b.HasOne("Domain.SysUsers.SysUser", "SysUser")
                        .WithMany("EvaluationOrderList")
                        .HasForeignKey("CreatorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.ServiceProviders.ServiceProvider", "ServiceProvider")
                        .WithMany("EvaluationOrderList")
                        .HasForeignKey("ServiceProviderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.Replies.Reply", b =>
                {
                    b.HasOne("Domain.EvaluationOrders.EvaluationOrder", "EvaluationOrder")
                        .WithMany("ReplyList")
                        .HasForeignKey("EvaluationOrderID");

                    b.HasOne("Domain.SysUsers.SysUser", "SysUser")
                        .WithMany("ReplyList")
                        .HasForeignKey("ReplierID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
